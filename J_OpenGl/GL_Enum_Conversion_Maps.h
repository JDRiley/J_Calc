#ifndef GL_ENUM_CONVERIONS_MAPS_H
#define GL_ENUM_CONVERIONS_MAPS_H

#include "OpenGL_Enums.h"
//
#include <gl\glew.h>
//
#include <j_map.h>

namespace jomike{

static const int texture_map_array[]
		= {
		GL_TEXTURE_1D
		, GL_TEXTURE_2D
		, GL_TEXTURE_3D
		, GL_TEXTURE_CUBE_MAP
	};

static const int gl_status_array[]
= {
	 GL_DELETE_STATUS
	, GL_LINK_STATUS
	, GL_VALIDATE_STATUS
	, GL_INFO_LOG_LENGTH
	, GL_ATTACHED_SHADERS
	, GL_ACTIVE_ATOMIC_COUNTER_BUFFERS
	, GL_ACTIVE_ATTRIBUTES
	, GL_ACTIVE_ATTRIBUTE_MAX_LENGTH
	, GL_ACTIVE_UNIFORMS
	, GL_ACTIVE_UNIFORM_MAX_LENGTH
	, GL_PROGRAM_BINARY_LENGTH
	, GL_COMPUTE_WORK_GROUP_SIZE
	, GL_TRANSFORM_FEEDBACK_BUFFER_MODE
	, GL_TRANSFORM_FEEDBACK_VARYINGS
	, GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH
	, GL_GEOMETRY_VERTICES_OUT
	, GL_GEOMETRY_INPUT_TYPE
	, GL_GEOMETRY_OUTPUT_TYPE
};

static const int array_draw_mode_array[]
= {
	GL_POINTS
	, GL_LINE_STRIP
	, GL_LINE_LOOP
	, GL_LINES
	, GL_LINE_STRIP_ADJACENCY
	, GL_LINES_ADJACENCY
	, GL_TRIANGLE_STRIP
	, GL_TRIANGLE_FAN
	, GL_TRIANGLES
	, GL_TRIANGLE_STRIP_ADJACENCY
	, GL_TRIANGLES_ADJACENCY
	, GL_PATCHES
};

static const int buffer_targets_array[]
= {
	GL_ARRAY_BUFFER
	, GL_ATOMIC_COUNTER_BUFFER
	, GL_COPY_READ_BUFFER
	, GL_COPY_WRITE_BUFFER
	, GL_DRAW_INDIRECT_BUFFER
	, GL_DISPATCH_INDIRECT_BUFFER
	, GL_ELEMENT_ARRAY_BUFFER
	, GL_PIXEL_PACK_BUFFER
	, GL_PIXEL_UNPACK_BUFFER
	, GL_QUERY_BUFFER
	, GL_SHADER_STORAGE_BUFFER
	, GL_TEXTURE_BUFFER
	, GL_TRANSFORM_FEEDBACK_BUFFER
	, GL_UNIFORM_BUFFER
};

static const int sized_internal_formats[]
= {
	GL_R8
	, GL_R8_SNORM
	, GL_R16
	, GL_R16_SNORM
	, GL_RG8
	, GL_RG8_SNORM
	, GL_RG16
	, GL_RG16_SNORM
	, GL_R3_G3_B2
	, GL_RGB4
	, GL_RGB5
	, GL_RGB8
	, GL_RGB8_SNORM
	, GL_RGB10
	, GL_RGB12
	, GL_RGB16_SNORM
	, GL_RGBA2
	, GL_RGBA4
	, GL_RGB5_A1
	, GL_RGBA8
	, GL_RGBA8_SNORM
	, GL_RGB10_A2
	, GL_RGB10_A2UI
	, GL_RGBA12
	, GL_RGBA16
	, GL_SRGB8
	, GL_SRGB8_ALPHA8
	, GL_R16F
	, GL_RG16F
	, GL_RGB16F
	, GL_RGBA16F
	, GL_R32F
	, GL_RG32F
	, GL_RGB32F
	, GL_RGBA32F
	, GL_R11F_G11F_B10F
	, GL_RGB9_E5
	, GL_R8I
	, GL_R8UI
	, GL_R16I
	, GL_R16UI
	, GL_R32I
	, GL_R32UI
	, GL_RG8I
	, GL_RG8UI
	, GL_RG16I
	, GL_RG16UI
	, GL_RG32I
	, GL_RG32UI
	, GL_RGB8I
	, GL_RGB8UI
	, GL_RGB16I
	, GL_RGB16UI
	, GL_RGB32I
	, GL_RGB32UI
	, GL_RGBA8I
	, GL_RGBA8UI
	, GL_RGBA16I
	, GL_RGBA16UI
	, GL_RGBA32I
	, GL_RGBA32UI
};

static int gl_pixel_formats_array[]
= {
	GL_RED
	, GL_RG
	, GL_RGB
	, GL_BGR
	, GL_RGBA
	, GL_BGRA
	, GL_DEPTH_COMPONENT
	, GL_STENCIL_INDEX
};

static int gl_attachment_points_arrary[]
= {
	GL_COLOR_ATTACHMENT0
	, GL_COLOR_ATTACHMENT1
	, GL_COLOR_ATTACHMENT2
	, GL_COLOR_ATTACHMENT3
	, GL_COLOR_ATTACHMENT4
	, GL_COLOR_ATTACHMENT5
	, GL_COLOR_ATTACHMENT6
	, GL_COLOR_ATTACHMENT7
	, GL_COLOR_ATTACHMENT8
	, GL_COLOR_ATTACHMENT9
	, GL_COLOR_ATTACHMENT10
	, GL_COLOR_ATTACHMENT11
	, GL_COLOR_ATTACHMENT12
	, GL_COLOR_ATTACHMENT13
	, GL_COLOR_ATTACHMENT14
	, GL_COLOR_ATTACHMENT15
	, GL_DEPTH_ATTACHMENT
	, GL_STENCIL_ATTACHMENT
	, GL_DEPTH_STENCIL_ATTACHMENT
};

const static int draw_types_array[]
= {
	GL_STATIC_DRAW
	, GL_DYNAMIC_DRAW
};

const static int gl_types_array[]
= {
	GL_BYTE
	, GL_UNSIGNED_BYTE
	, GL_SHORT
	, GL_UNSIGNED_SHORT
	, GL_INT
	, GL_UNSIGNED_INT
	, GL_HALF_FLOAT
	, GL_FLOAT
	, GL_DOUBLE
	, GL_FIXED
	, GL_INT_2_10_10_10_REV
	, GL_UNSIGNED_INT_2_10_10_10_REV
	, GL_UNSIGNED_INT_10F_11F_11F_REV
};

const static int texture_wrap_type_array[]
= {
	GL_CLAMP_TO_EDGE
	, GL_CLAMP_TO_BORDER
	, GL_MIRRORED_REPEAT
	, GL_REPEAT
	, GL_MIRROR_CLAMP_TO_EDGE
};



}

#endif //GL_ENUM_CONVERIONS_MAPS_H


